// Code generated by protoc-gen-go. DO NOT EDIT.
// source: contract.proto

package contract

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AddPersonRequest struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email                string   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Phone                string   `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddPersonRequest) Reset()         { *m = AddPersonRequest{} }
func (m *AddPersonRequest) String() string { return proto.CompactTextString(m) }
func (*AddPersonRequest) ProtoMessage()    {}
func (*AddPersonRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d19debeba7dea55a, []int{0}
}

func (m *AddPersonRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddPersonRequest.Unmarshal(m, b)
}
func (m *AddPersonRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddPersonRequest.Marshal(b, m, deterministic)
}
func (m *AddPersonRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddPersonRequest.Merge(m, src)
}
func (m *AddPersonRequest) XXX_Size() int {
	return xxx_messageInfo_AddPersonRequest.Size(m)
}
func (m *AddPersonRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddPersonRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddPersonRequest proto.InternalMessageInfo

func (m *AddPersonRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *AddPersonRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AddPersonRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *AddPersonRequest) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

type AddPersonResponse struct {
	Processed            bool     `protobuf:"varint,2,opt,name=processed,proto3" json:"processed,omitempty"`
	ErrorMessage         string   `protobuf:"bytes,1,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddPersonResponse) Reset()         { *m = AddPersonResponse{} }
func (m *AddPersonResponse) String() string { return proto.CompactTextString(m) }
func (*AddPersonResponse) ProtoMessage()    {}
func (*AddPersonResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d19debeba7dea55a, []int{1}
}

func (m *AddPersonResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddPersonResponse.Unmarshal(m, b)
}
func (m *AddPersonResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddPersonResponse.Marshal(b, m, deterministic)
}
func (m *AddPersonResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddPersonResponse.Merge(m, src)
}
func (m *AddPersonResponse) XXX_Size() int {
	return xxx_messageInfo_AddPersonResponse.Size(m)
}
func (m *AddPersonResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddPersonResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddPersonResponse proto.InternalMessageInfo

func (m *AddPersonResponse) GetProcessed() bool {
	if m != nil {
		return m.Processed
	}
	return false
}

func (m *AddPersonResponse) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func init() {
	proto.RegisterType((*AddPersonRequest)(nil), "contract.AddPersonRequest")
	proto.RegisterType((*AddPersonResponse)(nil), "contract.AddPersonResponse")
}

func init() { proto.RegisterFile("contract.proto", fileDescriptor_d19debeba7dea55a) }

var fileDescriptor_d19debeba7dea55a = []byte{
	// 214 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x4f, 0x4b, 0x03, 0x41,
	0x0c, 0xc5, 0x9d, 0xb5, 0xd5, 0x6e, 0x90, 0xa2, 0xc1, 0xc3, 0x52, 0x3d, 0x94, 0x3d, 0xed, 0xa9,
	0x88, 0x7e, 0x82, 0x5e, 0x05, 0x41, 0x06, 0xfa, 0x01, 0xb6, 0x93, 0xa0, 0x0b, 0x76, 0x32, 0x26,
	0xe3, 0xf7, 0x17, 0x67, 0xf0, 0x2f, 0xde, 0xf2, 0x7e, 0x81, 0x97, 0xf7, 0x02, 0xcb, 0x20, 0x31,
	0xeb, 0x18, 0xf2, 0x26, 0xa9, 0x64, 0xc1, 0xc5, 0xa7, 0xee, 0xf7, 0x70, 0xbe, 0x25, 0x7a, 0x64,
	0x35, 0x89, 0x9e, 0x5f, 0xdf, 0xd8, 0x32, 0x2e, 0xa1, 0x99, 0xa8, 0x73, 0x6b, 0x37, 0xcc, 0x7d,
	0x33, 0x11, 0x22, 0xcc, 0xe2, 0x78, 0xe0, 0xae, 0x59, 0xbb, 0xa1, 0xf5, 0x65, 0xc6, 0x4b, 0x98,
	0xf3, 0x61, 0x9c, 0x5e, 0xba, 0xe3, 0x02, 0xab, 0xf8, 0xa0, 0xe9, 0x59, 0x22, 0x77, 0xb3, 0x4a,
	0x8b, 0xe8, 0x77, 0x70, 0xf1, 0xe3, 0x86, 0x25, 0x89, 0xc6, 0x78, 0x0d, 0x6d, 0x52, 0x09, 0x6c,
	0xc6, 0x54, 0x9c, 0x17, 0xfe, 0x1b, 0x60, 0x0f, 0x67, 0xac, 0x2a, 0xfa, 0xc0, 0x66, 0xe3, 0x13,
	0x97, 0x30, 0xad, 0xff, 0xc5, 0x6e, 0x77, 0x70, 0x5a, 0x3d, 0x0d, 0xef, 0xa1, 0xdd, 0x12, 0x79,
	0x0e, 0xa2, 0x84, 0xab, 0xcd, 0x57, 0xdb, 0xbf, 0xd5, 0x56, 0x57, 0xff, 0xee, 0x6a, 0xa4, 0xfe,
	0x68, 0x70, 0x37, 0x6e, 0x7f, 0x52, 0x5e, 0x74, 0xf7, 0x1e, 0x00, 0x00, 0xff, 0xff, 0x49, 0x05,
	0x85, 0x1e, 0x34, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PersonsClient is the client API for Persons service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PersonsClient interface {
	AddRecord(ctx context.Context, opts ...grpc.CallOption) (Persons_AddRecordClient, error)
}

type personsClient struct {
	cc *grpc.ClientConn
}

func NewPersonsClient(cc *grpc.ClientConn) PersonsClient {
	return &personsClient{cc}
}

func (c *personsClient) AddRecord(ctx context.Context, opts ...grpc.CallOption) (Persons_AddRecordClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Persons_serviceDesc.Streams[0], "/contract.Persons/AddRecord", opts...)
	if err != nil {
		return nil, err
	}
	x := &personsAddRecordClient{stream}
	return x, nil
}

type Persons_AddRecordClient interface {
	Send(*AddPersonRequest) error
	Recv() (*AddPersonResponse, error)
	grpc.ClientStream
}

type personsAddRecordClient struct {
	grpc.ClientStream
}

func (x *personsAddRecordClient) Send(m *AddPersonRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *personsAddRecordClient) Recv() (*AddPersonResponse, error) {
	m := new(AddPersonResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// PersonsServer is the server API for Persons service.
type PersonsServer interface {
	AddRecord(Persons_AddRecordServer) error
}

func RegisterPersonsServer(s *grpc.Server, srv PersonsServer) {
	s.RegisterService(&_Persons_serviceDesc, srv)
}

func _Persons_AddRecord_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(PersonsServer).AddRecord(&personsAddRecordServer{stream})
}

type Persons_AddRecordServer interface {
	Send(*AddPersonResponse) error
	Recv() (*AddPersonRequest, error)
	grpc.ServerStream
}

type personsAddRecordServer struct {
	grpc.ServerStream
}

func (x *personsAddRecordServer) Send(m *AddPersonResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *personsAddRecordServer) Recv() (*AddPersonRequest, error) {
	m := new(AddPersonRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Persons_serviceDesc = grpc.ServiceDesc{
	ServiceName: "contract.Persons",
	HandlerType: (*PersonsServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "AddRecord",
			Handler:       _Persons_AddRecord_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "contract.proto",
}
